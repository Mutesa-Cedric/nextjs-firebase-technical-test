import { Gif } from '@/@types';
import GifCard from '@/components/gifCard';
import LoadingSpinner from '@/components/loadingSpinner';
import { getFavouriteGifs } from '@/utils/favourites';
import Head from 'next/head';
import React, { useEffect, useState } from 'react';
import Pagination from 'react-paginate';



const Favourites = () => {
    // states for favourite gifs
    const [gifs, setGifs] = useState<Gif[]>([]);
    const [loading, setLoading] = useState<boolean>(true);

    // fetch gifs from local storage on mount
    useEffect(() => {
        const favouriteGifs = getFavouriteGifs();
        setGifs(favouriteGifs);
        setLoading(false);
    }, []);

    // pagination
    const [currentPage, setCurrentPage] = useState(0);
    const pageStart = currentPage * 3;
    const pageEnd = pageStart + 3;
    const currentPageData = gifs.slice(pageStart, pageEnd);
    const totalPages = Math.ceil(gifs.length / 3);

    // handling  page change during pagination
    const handlePageChange = ({ selected }: { selected: number }) => {
        if (selected === currentPage) return;
        if (selected < 0 || selected >= totalPages) return;
        setCurrentPage(selected);
    };
    // pagination


    return (
        <>
            <Head>
                <title>Giffy app | Your favourite GIFs</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className='w-full h-full flex flex-col  justify-between'>
                {loading ? <div className='w-full h-full pt-16 flex items-center justify-center'>
                    <LoadingSpinner />
                </div> :
                    <>
                        <div className='flex flex-col space-y-8'>
                            <h1 className='font-medium text-xl'>Your Favourite GIFs</h1>
                            {/* gifs */}

                            {
                                gifs.length === 0 ?
                                    <div className='flex justify-center items-center h-96'>
                                        <h1 className='text-2xl font-medium'>No Favourites</h1>
                                    </div>
                                    :
                                    <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 w-full'>
                                        {
                                            currentPageData.map(gif => (
                                                <GifCard key={gif.id} {...gif} />
                                            ))
                                        }
                                    </div>
                            }
                        </div>

                        {/* pagination */}
                        {gifs.length > 3 &&
                            <Pagination
                                className="mt-2 mx-auto flex justify-center"
                                pageCount={gifs.length / 3}
                                forcePage={currentPage}
                                onPageChange={({ selected }) => setCurrentPage(selected)}
                                containerClassName='pagination'
                                pageClassName='page-item'
                                pageLinkClassName='page-link'
                                activeClassName='active'
                                previousClassName='previous'
                                nextClassName={`next ${currentPage === totalPages - 1 ? 'disabled' : ''}`}
                                disabledClassName='disabled'
                                previousLinkClassName='previous-link'
                                nextLinkClassName='next-link'
                                breakClassName='break'
                                breakLinkClassName='break-link'
                                marginPagesDisplayed={1}
                                pageRangeDisplayed={3}
                                onPageActive={handlePageChange}
                            />
                        }

                    </>
                }

            </main>
        </>
    )
}

Favourites.layout = 'main';

export default Favourites